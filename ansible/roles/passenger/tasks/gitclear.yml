---
- name: Copy staging GH keys over
  template:
    src: "gitclear/GH_keys.j2"
    dest: "/home/{{ user }}/gitclear/shared/.GH{{ item.id }}"
    owner: "{{ user }}"
    group: "{{ user }}"
  with_items:
    - { id: "1", client: "{{ stage1_github_client_id }}", secret: "{{ vault_stage1_github_client_secret}}" }
    - { id: "2", client: "{{ stage2_github_client_id }}", secret: "{{ vault_stage2_github_client_secret}}" }
  when: staging is defined
  tags: segregated_gh_keys

- name: gitclear | Ensure SSL directories exist for certs
  file:
    path: "{{ item.path }}"
    owner: root
    group: root
    state: directory
    mode: "{{ item.mode }}"
  with_items:
    - { path: "/etc/letsencrypt", mode: "0755" }
    - { path: "/etc/letsencrypt/archive", mode: "0700" }
    - { path: "/etc/letsencrypt/archive/staging1.gitclear.com", mode: "0755" }
    - { path: "/etc/letsencrypt/archive/staging2.gitclear.com", mode: "0755" }
    - { path: "/etc/letsencrypt/live", mode: "0700" }
    - { path: "/etc/letsencrypt/live/staging1.gitclear.com", mode: "0755" }
    - { path: "/etc/letsencrypt/live/staging2.gitclear.com", mode: "0755" }
  tags: nginx_config

- name: gitclear | Install SSL certificate for gitclear nginx config
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: "{{ item.mode }}"
  with_items:
    - { src: 'options-ssl-nginx.conf', dest: "/etc/letsencrypt/options-ssl-nginx.conf", mode: "0644" }
  tags: nginx_config
  when: inventory_hostname in groups['web']

- name: gitclear | Install SSL certificate for gitclear nginx config on staging (sos-app1)
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    force: no
    mode: "{{ item.mode }}"
  with_items:
    - { src: "fullchain.pem", dest: "/etc/letsencrypt/archive/staging1.gitclear.com/fullchain1.pem", mode: "0600" }
    - { src: "privkey.pem", dest: "/etc/letsencrypt/archive/staging1.gitclear.com/privkey1.pem", mode: "0600" }
  tags: nginx_config
  when: staging is defined and inventory_hostname == 'sos-app1'

- name: gitclear | Install SSL certificate for gitclear nginx config on staging (sos-app2)
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    force: no
    mode: "{{ item.mode }}"
  with_items:
    - { src: "fullchain-staging2.pem", dest: "/etc/letsencrypt/archive/staging2.gitclear.com/fullchain1.pem", mode: "0600" }
    - { src: "privkey-staging2.pem", dest: "/etc/letsencrypt/archive/staging2.gitclear.com/privkey1.pem", mode: "0600" }
  tags: nginx_config
  when: staging is defined and inventory_hostname == 'sos-app2'

- name: gitclear | Add SSL links for certificate except for sos-app2
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0777
    state: link
  with_items:
    - { src: "/etc/letsencrypt/archive/staging1.gitclear.com/fullchain1.pem", dest: "/etc/letsencrypt/live/staging1.gitclear.com/fullchain.pem" }
    - { src: "/etc/letsencrypt/archive/staging1.gitclear.com/privkey1.pem", dest: "/etc/letsencrypt/live/staging1.gitclear.com/privkey.pem" }
  tags: nginx_config
  when: inventory_hostname != 'sos-app2'

- name: gitclear | Add SSL links for certificate for sos-app2
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0777
    state: link
  with_items:
    - { src: "/etc/letsencrypt/archive/staging2.gitclear.com/fullchain1.pem", dest: "/etc/letsencrypt/live/staging2.gitclear.com/fullchain.pem" }
    - { src: "/etc/letsencrypt/archive/staging2.gitclear.com/privkey1.pem", dest: "/etc/letsencrypt/live/staging2.gitclear.com/privkey.pem" }
  tags: nginx_config
  when: inventory_hostname == 'sos-app2'

- name: gitclear | Create nginx conf for gitclear
  template:
    src: "gitclear.conf.j2"
    dest: /etc/nginx/conf.d/gitclear.conf
    mode: 0644
  notify: reload nginx
  tags: nginx_config
  when: inventory_hostname in groups['web']

- name: gitclear | Create staging passwd file
  copy:
    dest: /etc/nginx/htpasswd
    content: "bonz:$apr1$ne.PO...$ADXCPHUuUyJT.IDlHcs8b/\n"
    owner: root
    group: www-data
    mode: 0640
  when: staging is defined
  tags: nginx_config

- name: staging | Copy environment master file to the staging servers
  copy:
    src: vhost_environment
    dest: /usr/local/src/vhost_environment
  tags: update_bashrc
  when: staging is defined

- name: user | Add staging rcp alias to deployuser bashrc
  become: yes
  become_user: deployuser
  blockinfile:
    path: ~/.bashrc
    insertafter: EOF
    block: |
      # Set the correct aliases and environment variables to get dep and rcp commands
      # working on the vhost based servers
      if [ -f /usr/local/src/vhost_environment ]; then
          . /usr/local/src/vhost_environment
      fi
      alias rcp='RAILS_ENV=staging bundle exec rails c'
      cd $PROJ_ROOT
  tags: update_bashrc
  when: staging is defined
