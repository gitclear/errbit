---
- name: passenger | add key for passenger repos
  apt_key: url=http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x561F9B9CAC40B2F7 id=AC40B2F7 state=present

- # From https://askubuntu.com/questions/650032/gpg-errorthe-following-signatures-were-invalid-keyexpired
- name: passenger | ensure keys are updated
  shell: |
    apt-key list | grep \"expired: \" | sed -ne 's|pub .*/\([^ ]*\) .*|\1|gp' | xargs -n1 apt-key adv --keyserver keys.gnupg.net --recv-keys

- name: passenger | add required packages
  apt:
    state: present
    update_cache: yes
    cache_valid_time: 3600
    pkg:
      - apt-transport-https
      - ca-certificates
      - libmysqlclient-dev
      - cmake

- name: passenger | Install passenger license file
  copy:
    content: "{{ passenger_license_contents }}"
    dest: /etc/passenger-enterprise-license
    mode: 0644
  notify:
    - Restart nginx
  when: staging is not defined

- name: passenger | add passenger OSS repo
  apt_repository:
    repo='deb https://oss-binaries.phusionpassenger.com/apt/passenger {{ ansible_distribution_release }} main'
    state=present
    update_cache=yes
  when:  staging is defined

- name: passenger | Install passenger apt auth file
  template:
    src: "apt_auth.conf"
    dest: /etc/apt/auth.conf
    mode: 0600
  when: staging is not defined

- name: passenger | add passenger enterprise repo 
  apt_repository:
    repo="deb https://www.phusionpassenger.com/enterprise_apt {{ ansible_distribution_release }} main"
    state=present
    update_cache=yes
  when: staging is not defined

- name: passenger | install nginx passenger enterprise packages - Bionic
  apt: pkg={{ item.package }} state={{ item.state }}
  with_items:
    - { package: "python-passlib", state: "present" }
    - { package: "libnginx-mod-http-passenger-enterprise=1:6.0.5-2~bionic1", state: "present" }
    - { package: "passenger-enterprise=1:6.0.5-2~bionic1", state: "present" }
    - { package: "passenger-enterprise-dev=1:6.0.5-2~bionic1", state: "present" }
    - { package: "passenger", state: "absent" }
  notify: Restart nginx
  when: staging is not defined and ansible_distribution_release == 'bionic'

- name: passenger | install nginx passenger enterprise packages - Focal
  apt: pkg={{ item.package }} state={{ item.state }}
  with_items:
    - { package: "python-passlib", state: "present" }
    - { package: "libnginx-mod-http-passenger-enterprise=1:6.0.12-2~focal1", state: "present" }
    - { package: "passenger-enterprise=1:6.0.12-2~focal1", state: "present" }
    - { package: "passenger-enterprise-dev=1:6.0.12-2~focal1", state: "present" }
    - { package: "passenger", state: "absent" }
  notify: Restart nginx
  when: staging is not defined and ansible_distribution_release == 'focal'

- name: passenger | install nginx passenger OSS packages - Bonic
  apt: pkg={{ item.package }} state={{ item.state }}
  with_items:
    - { package: "python-passlib", state: "present" }
    - { package: "libnginx-mod-http-passenger=1:6.0.5-1~bionic1", state: "present" }
    - { package: "passenger-enterprise", state: "absent" }
    - { package: "passenger=1:6.0.5-1~bionic1", state: "present" }
  notify: Restart nginx
  when: staging is defined and ansible_distribution_release == 'bionic'

- name: passenger | install nginx passenger OSS packages - Focal
  apt: pkg={{ item.package }} state={{ item.state }}
  with_items:
    - { package: "python-passlib", state: "present" }
    - { package: "libnginx-mod-http-passenger=1:6.0.12-1~focal1", state: "present" }
    - { package: "passenger-enterprise", state: "absent" }
    - { package: "passenger=1:6.0.12-1~focal1", state: "present" }
  notify: Restart nginx
  when: staging is defined and ansible_distribution_release == 'focal'
